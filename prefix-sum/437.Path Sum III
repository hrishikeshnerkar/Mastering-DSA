/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int pathSum(TreeNode root, int targetSum) {
        if(root == null) return 0;
        return pathSum(root.left, targetSum) + CntPath(root, targetSum) + pathSum(root.right, targetSum);
    }

    private int CntPath(TreeNode root , long sum){
        if(root == null) return 0;
        int res=0;
        if((long)root.val == sum) res++;
        res += CntPath(root.left, sum - root.val);
        res += CntPath(root.right, sum - root.val);
        return res;
    }
}